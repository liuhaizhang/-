"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

IS_LIVE = False
people_center_id = 28

check_token = True
DBCHAR = 'utf8'

DBCHAR_extra = ''

session_modle = False

api_check_session_model = False

UPLOAD_ROOT = os.path.join(BASE_DIR, 'uploads/').replace('\\','/')

#2022、12、06新增：诊断报告中，整体诊断中的类型
PART_OF_SELECTION={
    1:['DQ','窦前'],2:['DX','窦小'],3:['DD','窦大'],4:['DH','窦后'],
    5:['DT','窦体'],6:['WT','胃体'],7:['WX','胃小'],8:['WD','胃窦'],
    9:['WD','胃底'],10:['WJ','胃角'],11:['TX','体小'],12:['TD','体大'],
    13:['BM','贲门'],14:['BMX','贲门下'],15:['YMQQ','幽门前区'],
}

#2022、12、06新增：诊断报告中的影像类型
SLIDE_TYPE = {
    1:'CT/活检'
}

#2022\12\06新增：诊断结果的程度
DIAGNOSE_LEVEL={
    1:'无',2:'轻度',3:'中度',4:'重度'
}

#2023-02-13切片文件存放的根目录
SLIDE_PATH = '/home/thearay/DataSet'
#2023-03-07 诊断报告中的科室
DEPARTMENT = {
    1:'神经内科',
    2:'耳鼻喉科',
    3:'内科',
    4:'泌尿外科',
    5:'消化科'
}

#2023-03-07医院
HOSPITAL = '信瑞医疗医院'


#2023-02-17 配置内存作为cache，主要给web_upload_file使用，要展示处理的进度条
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
        'TIMEOUT':7*60*60 #数据最久缓存7小时
    }
}


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '(fiw##98*hmq68umso*z%5ljr$(w$z&5v#=jb82ospc*7y75=o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'dataCtrl',
    'openCtrl',
    'user'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'public.middlewares.disporeRequest'
]

ROOT_URLCONF = 'api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

# prd
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'slide_mark',
#         'USER': 'root',
#         'PASSWORD': '123456',
#         'HOST': '127.0.0.1',
#         'PORT': '3306'
#     }
# }
# dev
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        #'NAME': 'slide_mark', #原来的数据库，有其他代码会使用到，为了区分出来，直接新建一个数据库了
        'NAME': 'gas_slide_mark',
        'USER': 'root',
        'PASSWORD': '123456',
        'HOST': '127.0.0.1',
        'PORT': '3306'
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

#LANGUAGE_CODE = 'en-us'

#TIME_ZONE = 'UTC'
LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False #由True 改为False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

# 阅片服务地址
imageparser_url = "http://127.0.0.1:8814/"
IMAGEPARSER_URL = "http://127.0.0.1:8814/"

# 服务器脚本python环境
python_env_path = "/home/thearay/anaconda3/envs/pytorch_env/bin/python "
PYTHON_ENV_PATH = "/home/thearay/anaconda3/envs/pytorch_env/bin/python "

# 服务器切割图片脚本地址
stomach_path = "/home/thearay/Stomach-release"
STOMACH_PATH = "/home/thearay/Stomach-release"

#2023-03-06地址映射到服务器的目录所有切片存放位置的根文件夹,对切片文件进行切片的字符串[部署到新环境时，需要手动修改]
SLIDE_SAVE_ROOT='DataSet/'
#2023-03-06，对切片生成.json文件时，需要使用到地址[go写的服务]
MAKE_JSON_URL = 'http://127.0.0.1:7100'

CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = ()
CORS_ALLOW_HEADERS = ('*')#23-03-07新增

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)

CORS_ALLOW_HEADERS = (
    'XMLHttpRequest',#23-03-07新增
    'X_FILENAME', #23-03-07新增
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'token',#请求头，要放行这个字符串，这样js才能在请求头中携带数据
)

DATA_UPLOAD_MAX_MEMORY_SIZE = 524288000

try:
    from local__settings import *
except ImportError:
    pass
